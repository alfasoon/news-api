module.exports = {
  funFacts: [
    "Built a custom in-memory caching system (no Redis needed)",
    "Uses native fetch API instead of axios for HTTP requests",
    "Cache keys are generated from URL paths and query parameters",
    "Expired cache entries get cleaned up every 5 minutes automatically",
    "Focus on find endpoints - search by title, author, or keywords",
    "Comprehensive error handling with descriptive messages and timestamps",
    "TODO: Add rate limiting when I have more time"
  ],
  badges: [
    "![Node.js](https://img.shields.io/badge/Node.js-339933?style=for-the-badge&logo=nodedotjs&logoColor=white)",
    "![Express.js](https://img.shields.io/badge/Express.js-000000?style=for-the-badge&logo=express&logoColor=white)",
    "![JavaScript](https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&logo=javascript&logoColor=black)",
    "![API](https://img.shields.io/badge/API-GNews-FF6B6B?style=for-the-badge&logo=api&logoColor=white)",
    "![Cache](https://img.shields.io/badge/Cache-In--Memory-4ECDC4?style=for-the-badge&logo=cache&logoColor=white)"
  ],
  techStacks: [
    "Node.js",
    "Express.js", 
    "JavaScript",
    "GNews API",
    "Custom In-Memory Cache",
    "Fetch API",
    "CORS"
  ],
  publicUrl: "https://github.com/alfasoon/news-api",
  bugUrl: "https://github.com/alfasoon/news-api/issues",
  screenshots: [
  ],
  documentations: [
    "README.md - Complete API documentation with examples",
    "server.js - Main server implementation with all routes",
    "services/gnewsService.js - GNews API integration",
    "services/cacheService.js - Custom caching system implementation",
    "controllers/ - Controller files for different API endpoints",
    "  homeController.js - Home and health check endpoints",
    "  newsController.js - News search and find operations",
    "routes/index.js - Route definitions and middleware setup",
    "middleware/cacheMiddleware.js - Cache middleware for API routes",
    "",
    "## üöÄ API Endpoints",
    "",
    "### Base URL",
    "```",
    "http://localhost:3000",
    "```",
    "",
    "### API Structure",
    "This API focuses on **find endpoints** rather than complex advanced search. It provides:",
    "- **Basic Search**: Simple news search with essential parameters",
    "- **Find Endpoints**: Specialized search by title, author, or keywords",
    "- **Cache Management**: Built-in caching system for performance",
    "- **Health Monitoring**: Health check endpoint",
    "",
    "**Note**: The find endpoints tend to work better than basic search in most cases.",
    "",
    "### Available Endpoints",
    "",
    "| Method | Endpoint | Description | Parameters |",
    "|--------|----------|-------------|------------|",
    "| GET | `/api/search` | Search news articles | `q={query}`, `lang={language}`, `country={country}`, `max={limit}` |",
    "| GET | `/api/find/title` | Find articles by title | `title={title_text}` |",
    "| GET | `/api/find/author` | Find articles by author | `author={author_name}` |",
    "| GET | `/api/find/keywords` | Find articles by keywords | `keywords={keyword1,keyword2}` |",
    "| GET | `/health` | Health check endpoint | None |",
    "",
    "### Example Usage",
    "",
    "Here are some working examples:",
    "",
    "```bash",
    "# Basic search for news",
    "curl \"http://localhost:3000/api/search?q=technology&lang=en&country=us&max=5\"",
    "",
    "# Find by title",
    "curl \"http://localhost:3000/api/find/title?title=artificial intelligence\"",
    "",
    "# Find by author",
    "curl \"http://localhost:3000/api/find/author?author=Reuters\"",
    "",
    "# Find by keywords",
    "curl \"http://localhost:3000/api/find/keywords?keywords=climate,environment\"",
    "",
    "# Health check",
    "curl \"http://localhost:3000/health\"",
    "```",
    "",
    "**Note:** All query parameters are replaceable with your desired values.",
    "",
    "### Find Endpoints Examples by Country",
    "",
    "Here are some country-specific examples:",
    "",
    "#### üáÆüá≥ India News Examples",
    "```bash",
    "# Find Indian news by title",
    "curl \"http://localhost:3000/api/find/title?title=India economy\"",
    "",
    "# Find Indian news by author/source",
    "curl \"http://localhost:3000/api/find/author?author=Times of India\"",
    "",
    "# Find Indian news by keywords",
    "curl \"http://localhost:3000/api/find/keywords?keywords=india,politics,modi\"",
    "",
    "# Search Indian news",
    "curl \"http://localhost:3000/api/search?q=india&country=in&lang=en&max=10\"",
    "```",
    "",
    "#### üá®üá≥ China News Examples",
    "```bash",
    "# Find Chinese news by title",
    "curl \"http://localhost:3000/api/find/title?title=China technology\"",
    "",
    "# Find Chinese news by author/source",
    "curl \"http://localhost:3000/api/find/author?author=China Daily\"",
    "",
    "# Find Chinese news by keywords",
    "curl \"http://localhost:3000/api/find/keywords?keywords=china,economy,beijing\"",
    "",
    "# Search Chinese news",
    "curl \"http://localhost:3000/api/search?q=china&country=cn&lang=en&max=10\"",
    "```",
    "",
    "#### üá∫üá∏ US News Examples",
    "```bash",
    "# Find US news by title",
    "curl \"http://localhost:3000/api/find/title?title=America politics\"",
    "",
    "# Find US news by author/source",
    "curl \"http://localhost:3000/api/find/author?author=CNN\"",
    "",
    "# Find US news by keywords",
    "curl \"http://localhost:3000/api/find/keywords?keywords=america,technology,california\"",
    "",
    "# Search US news",
    "curl \"http://localhost:3000/api/search?q=america&country=us&lang=en&max=10\"",
    "```",
    "",
    "**Note**: The keywords endpoint typically returns more results than title/author searches.",
    "",
    "### Supported Languages",
    "",
    "The API supports multiple languages:",
    "",
    "| Language | Code | Language | Code |",
    "|----------|------|----------|------|",
    "| English | `en` | Spanish | `es` |",
    "| French | `fr` | German | `de` |",
    "| Chinese | `zh` | Japanese | `ja` |",
    "| Arabic | `ar` | Russian | `ru` |",
    "| Portuguese | `pt` | Italian | `it` |",
    "| Dutch | `nl` | Swedish | `sv` |",
    "| Hindi | `hi` | Tamil | `ta` |",
    "| And more... | | | |",
    "",
    "### Supported Countries",
    "",
    "Supported countries include:",
    "",
    "| Country | Code | Country | Code |",
    "|---------|------|---------|------|",
    "| United States | `us` | United Kingdom | `gb` |",
    "| Canada | `ca` | Australia | `au` |",
    "| Germany | `de` | France | `fr` |",
    "| Japan | `jp` | China | `cn` |",
    "| India | `in` | Brazil | `br` |",
    "| Spain | `es` | Italy | `it` |",
    "| And more... | | | |",
    "",
    "**Note**: Tested with `us`, `in`, and `cn` - other countries should work as well."
  ],
  animations: [
    "https://cdn.dribbble.com/users/2401141/screenshots/5487982/developers-gif-showcase.gif"
  ],
  footer: "Built with ‚ù§Ô∏è using Node.js and Express.js",
};
